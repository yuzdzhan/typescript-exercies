{"ast":null,"code":"var _jsxFileName = \"/Users/superhosting/Personal/Projects/book-fullstack-react-with-typescript/exercise-files/03-react-piano/step-8/src/components/Key/Key.tsx\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { usePressObserver } from \"../PressObserver\";\nimport \"./style.css\";\nexport const Key = ({\n  type,\n  label,\n  onDown,\n  onUp,\n  ...rest\n}) => {\n  const pressed = usePressObserver({\n    watchKey: label,\n    onStartPress: onDown,\n    onFinishPress: onUp\n  });\n  return /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    className: clsx(`key key--${type}`, pressed && \"is-pressed\"),\n    onMouseDown: onDown,\n    onMouseUp: onUp,\n    type: \"button\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }), label);\n};","map":{"version":3,"sources":["/Users/superhosting/Personal/Projects/book-fullstack-react-with-typescript/exercise-files/03-react-piano/step-8/src/components/Key/Key.tsx"],"names":["React","clsx","usePressObserver","Key","type","label","onDown","onUp","rest","pressed","watchKey","onStartPress","onFinishPress"],"mappings":";AAAA,OAAOA,KAAP,MAA4D,OAA5D;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,OAAO,aAAP;AAWA,OAAO,MAAMC,GAAgC,GAAG,CAAC;AAC/CC,EAAAA,IAD+C;AAE/CC,EAAAA,KAF+C;AAG/CC,EAAAA,MAH+C;AAI/CC,EAAAA,IAJ+C;AAK/C,KAAGC;AAL4C,CAAD,KAM1C;AACJ,QAAMC,OAAO,GAAGP,gBAAgB,CAAC;AAC/BQ,IAAAA,QAAQ,EAAEL,KADqB;AAE/BM,IAAAA,YAAY,EAAEL,MAFiB;AAG/BM,IAAAA,aAAa,EAAEL;AAHgB,GAAD,CAAhC;AAMA,sBACE;AACE,IAAA,SAAS,EAAEN,IAAI,CAAE,YAAWG,IAAK,EAAlB,EAAqBK,OAAO,IAAI,YAAhC,CADjB;AAEE,IAAA,WAAW,EAAEH,MAFf;AAGE,IAAA,SAAS,EAAEC,IAHb;AAIE,IAAA,IAAI,EAAC;AAJP,KAKMC,IALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOGH,KAPH,CADF;AAWD,CAxBM","sourcesContent":["import React, { FunctionComponent, ReactEventHandler } from \"react\"\nimport clsx from \"clsx\"\nimport { NoteType } from \"../../domain/note\"\nimport { usePressObserver } from \"../PressObserver\"\nimport \"./style.css\"\n\ninterface KeyProps {\n  type: NoteType\n  label: string\n  disabled?: boolean\n\n  onUp: ReactEventHandler<HTMLButtonElement>\n  onDown: ReactEventHandler<HTMLButtonElement>\n}\n\nexport const Key: FunctionComponent<KeyProps> = ({\n  type,\n  label,\n  onDown,\n  onUp,\n  ...rest\n}) => {\n  const pressed = usePressObserver({\n    watchKey: label,\n    onStartPress: onDown,\n    onFinishPress: onUp\n  })\n\n  return (\n    <button\n      className={clsx(`key key--${type}`, pressed && \"is-pressed\")}\n      onMouseDown={onDown}\n      onMouseUp={onUp}\n      type=\"button\"\n      {...rest}\n    >\n      {label}\n    </button>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}